extends layout

block content
  if user
    - var hasCombination = combinations.length > 0
    if hasCombination
      div
        a(href="/words/new").btn.btn-main-color.my-3 投稿を作成する
      h3.mb-3 組み合わせ一覧
      each combination in combinations
        div.row.mb-3
          div.col-sm-2
            - var favorite = favoriteMap.get(combination.combinationId)
            - var favoriteIconColor = ['md-dark', 'favorite-icon-pink']
            div.favorite-action
              div(
                data-user-id=user.id
                data-combination-id=combination.combinationId
                data-favorite=favorite).favorite-button.mx-auto
                i(class=`material-icons md-36 favorite-icon ${favoriteIconColor[favorite]}` ) favorite_border
              span.favorite-counter #{combination.favoriteCounter}
            - var comment = commentMap.get(combination.combinationId)
            - var commentIconColor = ['md-dark', 'favorite-icon-green']
            div.comment-action
              a(href=`/combinations/${combination.combinationId}`).jamp-to-comment-button
                i(class=`material-icons md-36 reverse comment-icon ${commentIconColor[comment]}`) chat_bubble_outline
              span #{combination.commentCounter}件   
          div.col-sm-5
            div.card
              - var firstWord = wordMap.get(combination.firstWordId)
              div.card-header
                span.word-username #{firstWord.username}
                span.word-creation-day #{firstWord.formattedCreatedAt}
                if firstWord.isUpdated 
                 span.small-font.text-muted (編集済)
              div.card-body
                h5.card-title #{firstWord.word}
                hr
                - var hasDescription = firstWord.description
                if hasDescription
                  p.card-text.text-muted.word-description #{firstWord.description}
                else
                  p.card-text.text-muted.small-font No description
          div.col-sm-5
            div.card
              - var secondWord = wordMap.get(combination.secondWordId)
              div.card-header
                span.word-username #{secondWord.username}
                span.word-creation-day #{secondWord.formattedCreatedAt}
                if secondWord.isUpdated
                  span.small-font.text-muted (編集済)
              div.card-body
                h5.card-title #{secondWord.word}
                hr
                - var hasDescription = secondWord.description
                if hasDescription
                  p.card-text.text-muted.word-description #{secondWord.description}
                else
                  p.card-text.text-muted.small-font No description
      nav
        ul.pagination.justify-content-center
          if page.current >= 2
            li.page-item
              a.page-link(href=`/?page=${page.current - 1}`) 前へ
          else
            li.page-item.disabled
              a.page-link.disabled(href="#" tabindex="-1") 前へ
          if page.current < page.max
            li.page-item
              a.page-link(href=`/?page=${page.current + 1}`) 次へ
          else
            li.page-item.disabled
              a.page-link(href="#" tabindex="-1") 次へ
    else
      div.empty-message-container.mt-3
        p まだ組み合わせがありません
        div
          a(href="/words/new").btn.btn-main-color 投稿を作成する
  else
    div.jumbotron.text-center.my-3
      h2.display-4 アイデアメーカー
      div.underline-jumbotron
      div
        span.lead アイデアを生み出すのに便利なアプリです。
        br 
        span ユーザーが投稿した単語を使って組み合わせを作ります。ピンとくるものを見つけましょう。
  



